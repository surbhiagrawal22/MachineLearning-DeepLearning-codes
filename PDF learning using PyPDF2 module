{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled4.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyPSzwCSCifc8+783dn5vZry",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/surbhiagrawal22/rep0/blob/master/PDF%20learning%20using%20PyPDF2%20module\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Jl7wlAakddT0",
        "outputId": "d4d8abfb-e668-4909-8e32-b6985c528e9f"
      },
      "source": [
        "import PyPDF2 \n",
        "from PyPDF2 import PdfFileReader,PdfFileWriter\n",
        "from pathlib import Path\n",
        "\n",
        "\n",
        "# setting the path of file \n",
        "file_path=Path(r'/content/Commerzbank-Filial-Informationen-8-06-2020.pdf')\n",
        "print(type(file_path))\n"
      ],
      "execution_count": 136,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pathlib.PosixPath'>\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MJSPrS8DddtS"
      },
      "source": [
        "# reading the PDF file\n",
        "pdf_reader=PdfFileReader(str(file_path))\n"
      ],
      "execution_count": 137,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DN383up-ddwg",
        "outputId": "9520289c-f9f5-4834-98d2-5d662119a756"
      },
      "source": [
        "DocumentInfo=pdf_reader.getDocumentInfo()\n",
        "print(DocumentInfo)\n",
        "print(DocumentInfo[\"/Creator\"])\n",
        "print(DocumentInfo[\"/CreationDate\"])\n",
        "print(DocumentInfo[\"/ModDate\"])"
      ],
      "execution_count": 138,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'/CreationDate': \"D:20190801135229+02'00'\", '/Creator': 'Adobe InDesign CC 14.0 (Macintosh)', '/ModDate': \"D:20191202163109+02'00'\", '/Producer': 'Adobe PDF Library 15.0', '/Trapped': '/False'}\n",
            "Adobe InDesign CC 14.0 (Macintosh)\n",
            "D:20190801135229+02'00'\n",
            "D:20191202163109+02'00'\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-_tp7QZvddzw",
        "outputId": "a6e57e3a-d701-4eab-f0e9-45f4fb382688"
      },
      "source": [
        "num_pages=pdf_reader.getNumPages()\n",
        "print(num_pages)\n",
        "\n",
        "page_0=pdf_reader.getPage(0)\n",
        "print(page_0)\n",
        "extratct_page_0_text=page_0.extractText()\n",
        "print(extratct_page_0_text)"
      ],
      "execution_count": 139,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2\n",
            "{'/Annots': [IndirectObject(51, 0), IndirectObject(52, 0)], '/ArtBox': [0, 0, 595.276, 841.89], '/BleedBox': [0, 0, 595.276, 841.89], '/Contents': [IndirectObject(53, 0), IndirectObject(54, 0), IndirectObject(55, 0)], '/CropBox': [0, 0, 595.276, 841.89], '/Group': IndirectObject(56, 0), '/LastModified': \"D:20190801141556+02'00'\", '/MediaBox': [0, 0, 595.276, 841.89], '/Parent': IndirectObject(5, 0), '/Resources': {'/ColorSpace': {'/CS0': ['/ICCBased', IndirectObject(57, 0)]}, '/ExtGState': {'/GS0': IndirectObject(58, 0), '/GS1': IndirectObject(59, 0)}, '/Font': {'/T1_0': IndirectObject(60, 0), '/T1_1': IndirectObject(61, 0)}, '/ProcSet': ['/PDF', '/Text', '/ImageC'], '/Properties': {'/MC0': IndirectObject(62, 0), '/MC1': IndirectObject(63, 0), '/MC10': IndirectObject(64, 0), '/MC11': IndirectObject(65, 0), '/MC2': IndirectObject(66, 0), '/MC3': IndirectObject(67, 0), '/MC4': IndirectObject(68, 0), '/MC5': IndirectObject(69, 0), '/MC6': IndirectObject(70, 0), '/MC7': IndirectObject(71, 0), '/MC8': IndirectObject(72, 0), '/MC9': IndirectObject(73, 0)}, '/Shading': {'/Sh0': IndirectObject(74, 0)}, '/XObject': {'/Im0': IndirectObject(75, 0), '/Form2': IndirectObject(76, 0)}}, '/Rotate': 0, '/StructParents': 13, '/Tabs': '/W', '/Thumb': IndirectObject(77, 0), '/TrimBox': [0, 0, 595.276, 841.89], '/Type': '/Page'}\n",
            "Sie können Ihre Bankgeschäfte jederzeit einfach˜ bequem und sicher per App˜ Web \n",
            "und Telefon erledigen˚ Eine umfangreiche Beratung erhalten Sie in unseren Filialen˚\n",
            "Wir sind für Sie da˜\n",
            " digital und persönlich\n",
            "Filiale\n",
            "Leistungen in allen Filialen\n",
            "ŁKontoeröffnung\n",
            "ŁRund ums Konto\n",
            "ŁRatenkredit\n",
            "ŁTagesgeld-˛Sparkonto\n",
            "ŁBeratungstermine vereinbaren\n",
            "Zusätzlich in ausgewählten Filialen\n",
            "ŁBaufinanzierung\n",
            "ŁVermögensaufbau\n",
            "ŁVermögensanlage\n",
            "ŁVorsorge & Absicherung\n",
            "App\n",
            "Leistungen\n",
            "Ł Kontostand & Umsätze\n",
            "Ł Daueraufträge & Überweisungen\n",
            "(inkl\n",
            "˚ Echtzeitüberweisungen)\n",
            "Ł Kreditkarten verwalten˜ sperren & Wunsch-PIN\n",
            "vergeben\n",
            "Ł Postbox˝ Ablage Bankdokumente\n",
            "(z˚˙B˚ Ko\n",
            "ntoauszug)\n",
            "Ł Kontoalarm (Push-Benachrichtigungen\n",
            "zu z˚˙B˚ Um\n",
            "sätzen)\n",
            "ŁAnruf im Kundencenter (bereits authentifiziert)\n",
            "Ł Deutsch und Englisch\n",
            "Kundencenter\n",
            "(Rund um die Uhr˜ ˚˛˝ ˙ ˆ˚˚˚ ˆ˚˚˚)\n",
            "Leistungen\n",
            "ŁKontoinformationen\n",
            "ŁGiro- und Kreditkarten bestellen & verwalten\n",
            "Ł Produkte abschließen (z˚˙B˚ Ratenkredit˜\n",
            "Kontomodell wechseln)\n",
            "ŁUnterstützung beim Digital Banking Zugang\n",
            "ŁBeratungstermine vereinbaren\n",
            "TIPP\n",
            "Verwenden Sie für Ihre Anrufe bei uns die \n",
            "\n",
            "Banking-App auf Ihrem Smartphone˝ Dann \n",
            " werden automatisch die Zugangsdaten \n",
            " gesichert übermittelt˚ Schneller und einfacher \n",
            "\n",
            "gehtˆs nicht˚\n",
            "Jetzt downloaden\n",
            "ŁCommerzbank Banking-App\n",
            "ŁCommerzbank photoTAN\n",
            "Web\n",
            "(wwwˇcommerzbankˇde)\n",
            "Leistungen\n",
            "Zusätzlich zur App˝\n",
            "ŁDigitales Haushaltsbuch\n",
            "Ł Depotansicht mit umfangreichen Analyse-\n",
            "\n",
            "funktionen\n",
            "ŁWertpapiere kaufen und verkaufen\n",
            "ŁWertpapier-Sparpläne anlegen\n",
            "ŁDispositionskredit einrichten & verwalten\n",
            "Ł Kreditkarte (inkl˚ Ersatzkarte) bestellen & Limit\n",
            "\n",
            "ändern\n",
            "ŁLastschriftrückgaben & Auslandsüberweisungen\n",
            "ŁFremdwährungen bestellen\n",
            "ŁZugangsdaten zum Digital Banking anfordern\n",
            "KOSTENLOS BARGELD ABHEBEN\n",
            "Neben allen Geldautomaten der Cash Group \n",
            "\n",
            "(Commerzbank˜ Deutsche Bank˜ HypoVereins-\n",
            "\n",
            "bank und Postbank) können Sie auch an teil-\n",
            "\n",
            "nehmenden Shell-Tankstellen kostenlos Bargeld \n",
            "\n",
            "abheben˚ Über die Banking-App sehen Sie mit \n",
            "\n",
            "dem Bargeldfinder die nächste Möglichkeit˚\n",
            "DIGITAL BANKING\n",
            "\n",
            "Um alle unsere Services bequem und \n",
            " sicher per App˜ Web und Telefon \n",
            " jederzeit nutzen zu können˜ benötigen \n",
            "Sie Ih\n",
            "re Zugangsdaten zum Digital \n",
            "Banking˚\n",
            "Einfach in Ihrer Filiale beantragen \n",
            "oder pe\n",
            "r Laptop˛PC unter \n",
            " www˚commerzbank˚de˛zugang  \n",
            "Ihre Teilnehmernummer˝\n",
            "Ihre PIN zum Digital Banking\n",
            "(bitte gut merken)\n",
            "GÜLTIG\n",
            "ab \n",
            "˘ˇ˚˚ˇ˘\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zIzt4Bg8dd29"
      },
      "source": [
        "pdf_writer=PdfFileWriter()\n",
        "# pdf_writer.addBlankPage(width=100,height=100)\n",
        "\n",
        "\n"
      ],
      "execution_count": 140,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fI0xC-yJh-jh"
      },
      "source": [
        "### to copy a range of pages from  PDF to a new PDF file \n",
        "\n",
        "for i in range(1):\n",
        "  tex=pdf_reader.getPage(i)\n",
        "  pdf_writer.addPage(tex)\n",
        "\n",
        "\n",
        "with open(\"blank.pdf\",mode=\"wb\") as output_file:\n",
        "  pdf_writer.write(output_file)\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "execution_count": 141,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Sncl4roWoYb4"
      },
      "source": [
        "### to copy a range of pages from  PDF to a new PDF file \n",
        "\n",
        "import PyPDF2\n",
        "from PyPDF2 import PdfFileReader,PdfFileWriter\n",
        "from pathlib import Path\n",
        "\n",
        "file_path=Path(r'/content/Commerzbank-Filial-Informationen-8-06-2020.pdf')\n",
        "pdf_reader=PdfFileReader(str(file_path))\n",
        "pdf_writer=PdfFileWriter()\n",
        "for page in pdf_reader.pages[:2]:\n",
        "  pdf_writer.addPage(page)\n",
        "\n",
        "with open(\"new.pdf\",mode=\"wb\") as output_file1:\n",
        "    pdf_writer.write(output_file1)"
      ],
      "execution_count": 142,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HgGH6SG0yfnd",
        "outputId": "546ac2d4-0bc6-42fa-a358-b1ee20d1c900"
      },
      "source": [
        "### to add last page from a PDF to a new PDF file \n",
        "import PyPDF2\n",
        "from PyPDF2 import PdfFileReader,PdfFileWriter\n",
        "filepath=Path(r'/content/Commerzbank-Filial-Informationen-8-06-2020.pdf')\n",
        "\n",
        "pdf_reader=PdfFileReader(str(filepath))\n",
        "\n",
        "no_page=pdf_reader.getNumPages()\n",
        "print(no_page)\n",
        "pdf_writer=PdfFileWriter()\n",
        "page=pdf_reader.pages[-1]\n",
        "pdf_writer.addPage(page)\n",
        "with open(\"newblank.pdf\",mode=\"wb\") as outputnew:\n",
        "      pdf_writer.write(outputnew)"
      ],
      "execution_count": 143,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pI5lD_-W2fXd"
      },
      "source": [
        "# append of four files in to one another one after another\n",
        "from PyPDF2 import PdfFileMerger,PdfFileReader,PdfFileWriter\n",
        "pdfmerger=PdfFileMerger()\n",
        "filepath1=Path(r'/content/Commerzbank-Filial-Informationen-8-06-2020.pdf')\n",
        "filepath2=Path(r'/content/Immatrikulationsbescheinigung_DE.pdf')\n",
        "filepath3=Path(r'/content/Immatrikulationsbescheinigung_EN.pdf')\n",
        "filepath4=Path(r'/content/Immatrikulationsnachweis.pdf')\n",
        "pdf_writer=PdfFileWriter()\n",
        "file1=PdfFileReader(str(filepath1))\n",
        "file2=PdfFileReader(str(filepath2))\n",
        "file3=PdfFileReader(str(filepath3))\n",
        "file4=PdfFileReader(str(filepath4))\n",
        "\n",
        "final_file=[file1,file2,file3,file4]\n",
        "\n",
        "for i in final_file:\n",
        "  pdfmerger.append(i)\n",
        "\n",
        "with open(\"merged.pdf\",mode=\"wb\") as merged_ouput:\n",
        "    pdfmerger.write(merged_ouput)"
      ],
      "execution_count": 149,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Tg4v74347Od9"
      },
      "source": [
        "# merge of four files in to one location at user defined location\n",
        "from PyPDF2 import PdfFileReader,PdfFileMerger,PdfFileWriter\n",
        "from pathlib import Path\n",
        "filepath1=Path(r'/content/Commerzbank-Filial-Informationen-8-06-2020.pdf')\n",
        "filepath2=Path(r'/content/Immatrikulationsbescheinigung_DE.pdf')\n",
        "filepath3=Path(r'/content/Immatrikulationsbescheinigung_EN.pdf')\n",
        "filepath4=Path(r'/content/Immatrikulationsnachweis.pdf')\n",
        "\n",
        "pdf_merger=PdfFileMerger()\n",
        "\n",
        "file1=PdfFileReader(str(filepath1))\n",
        "file2=PdfFileReader(str(filepath2))\n",
        "file3=PdfFileReader(str(filepath3))\n",
        "file4=PdfFileReader(str(filepath4))\n",
        "\n",
        "pdf_merger.append(file1)\n",
        "pdf_merger.merge(1,file2 )\n",
        "\n",
        "with open(\"newmerged.pdf\",mode=\"wb\") as outputfile:\n",
        "  pdf_merger.write(outputfile)\n"
      ],
      "execution_count": 157,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-SQPEO1-EGXB",
        "outputId": "569d5854-62d6-4487-81d5-c9c3e6724c27"
      },
      "source": [
        "# Rotating of pages of PDF files \n",
        "\n",
        "\n",
        "# merge of four files in to one location at user defined location\n",
        "from PyPDF2 import PdfFileReader,PdfFileMerger,PdfFileWriter\n",
        "from pathlib import Path\n",
        "filepath1=Path(r'/content/Commerzbank-Filial-Informationen-8-06-2020.pdf')\n",
        "filepath2=Path(r'/content/Immatrikulationsbescheinigung_DE.pdf')\n",
        "filepath3=Path(r'/content/Immatrikulationsbescheinigung_EN.pdf')\n",
        "filepath4=Path(r'/content/Immatrikulationsnachweis.pdf')\n",
        "\n",
        "pdf_merger=PdfFileMerger()\n",
        "\n",
        "pdf_writer=PdfFileWriter()\n",
        "file1=PdfFileReader(str(filepath1))\n",
        "file2=PdfFileReader(str(filepath2))\n",
        "file3=PdfFileReader(str(filepath3))\n",
        "file4=PdfFileReader(str(filepath4))\n",
        "\n",
        "\n",
        "file_all=[file1,file2,file3,file4]\n",
        "\n",
        "file_1_read=file1.getDocumentInfo()\n",
        "print(file_1_read)\n",
        "\n",
        "page1=file1.getPage(1)\n",
        "print(page1[\"/Rotate\"])\n",
        "\n",
        "for i in range(file1.getNumPages()):\n",
        "      page=file1.getPage(i)\n",
        "      if page[\"/Rotate\"]==0:\n",
        "        print(True)\n",
        "\n",
        "print(file1.getNumPages())\n",
        "page=file1.getPage(0)\n",
        "for i in page:\n",
        "  print(i)        \n",
        "print(file2.getNumPages())\n",
        "page=file2.getPage(0)\n",
        "print(page)\n",
        "for i in page:\n",
        "  print(i)\n",
        "for i in range(file2.getNumPages()):\n",
        "  page=file2.getPage(i)\n",
        "  try:\n",
        "   if page[\"/Rotate\"]==0:\n",
        "        print(True) \n",
        "  except  Exception:\n",
        "    print(Exception)  \n",
        "\n",
        "print(file3.getNumPages())\n",
        "page=file3.getPage(0)\n",
        "print(page)\n",
        "for i in page:\n",
        "  print(i) \n",
        "\n",
        "print(file4.getNumPages())\n",
        "page=file4.getPage(0)\n",
        "print(page)\n",
        "for i in page:\n",
        "  print(i)    \n",
        "\n",
        "for i in range(file4.getNumPages() ):\n",
        "  try:\n",
        "    page=file4.getPage(i)\n",
        "    if page[\"/Rotate\"]==0:\n",
        "      pass\n",
        "      \n",
        "    \n",
        "  except:\n",
        "    print(\"Rotate not avaible \")  \n",
        "  finally:\n",
        "    page=page.rotateClockwise(90)\n",
        "    pdf_writer.addPage(page)   \n",
        "with open(\"rotate.pdf\",\"wb\") as outputfile:\n",
        "      pdf_writer.write(outputfile)   "
      ],
      "execution_count": 186,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'/CreationDate': \"D:20190801135229+02'00'\", '/Creator': 'Adobe InDesign CC 14.0 (Macintosh)', '/ModDate': \"D:20191202163109+02'00'\", '/Producer': 'Adobe PDF Library 15.0', '/Trapped': '/False'}\n",
            "0\n",
            "True\n",
            "True\n",
            "2\n",
            "/Annots\n",
            "/ArtBox\n",
            "/BleedBox\n",
            "/Contents\n",
            "/CropBox\n",
            "/Group\n",
            "/LastModified\n",
            "/MediaBox\n",
            "/Parent\n",
            "/Resources\n",
            "/Rotate\n",
            "/StructParents\n",
            "/Tabs\n",
            "/Thumb\n",
            "/TrimBox\n",
            "/Type\n",
            "1\n",
            "{'/Type': '/Page', '/Parent': IndirectObject(1, 0), '/MediaBox': [0, 0, 595.276, 841.89], '/Contents': IndirectObject(9, 0), '/Resources': {'/ProcSet': IndirectObject(2, 0), '/XObject': {'/Im4': IndirectObject(4, 0)}, '/Font': {'/F5': IndirectObject(5, 0), '/F6': IndirectObject(6, 0), '/F7': IndirectObject(7, 0), '/F8': IndirectObject(8, 0)}}}\n",
            "/Type\n",
            "/Parent\n",
            "/MediaBox\n",
            "/Contents\n",
            "/Resources\n",
            "<class 'Exception'>\n",
            "1\n",
            "{'/Type': '/Page', '/Parent': IndirectObject(1, 0), '/MediaBox': [0, 0, 595.276, 841.89], '/Contents': IndirectObject(8, 0), '/Resources': {'/ProcSet': IndirectObject(2, 0), '/XObject': {'/Im4': IndirectObject(4, 0)}, '/Font': {'/F5': IndirectObject(5, 0), '/F6': IndirectObject(6, 0), '/F7': IndirectObject(7, 0)}}}\n",
            "/Type\n",
            "/Parent\n",
            "/MediaBox\n",
            "/Contents\n",
            "/Resources\n",
            "2\n",
            "{'/Type': '/Page', '/Parent': IndirectObject(1, 0), '/MediaBox': [0, 0, 595, 842], '/Resources': IndirectObject(3, 0), '/Contents': IndirectObject(5, 0), '/Annots': IndirectObject(7, 0)}\n",
            "/Type\n",
            "/Parent\n",
            "/MediaBox\n",
            "/Resources\n",
            "/Contents\n",
            "/Annots\n",
            "Rotate not avaible \n",
            "Rotate not avaible \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BYDt7T2yMrHi"
      },
      "source": [
        "# to rotate all pages in a file\n",
        "from PyPDF2 import PdfFileMerger,PdfFileReader,PdfFileWriter\n",
        "from pathlib import Path\n",
        "\n",
        "path1=Path(r'/content/Commerzbank-Filial-Informationen-8-06-2020.pdf')\n",
        "\n",
        "fileread=PdfFileReader(str(path1))\n",
        "pdf_writer=PdfFileWriter()\n",
        "for i in range(fileread.getNumPages()):\n",
        "  page=fileread.getPage(i)\n",
        "  page=page.rotateClockwise(90)\n",
        "  pdf_writer.addPage(page)\n",
        "with open(\"all-rotated.pdf\",mode=\"wb\") as outputfile:\n",
        "    pdf_writer.write(outputfile)"
      ],
      "execution_count": 190,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GLJnwwvDN63W"
      },
      "source": [
        "## merging 4 file and then adding encyrption to new PDF file\n",
        "\n",
        "\n",
        "import PyPDF2 \n",
        "from PyPDF2 import PdfFileMerger,PdfFileReader,PdfFileWriter\n",
        "\n",
        "## first defining the path of all files and reading it\n",
        "filepath1=Path(r'/content/Commerzbank-Filial-Informationen-8-06-2020.pdf')\n",
        "filepath2=Path(r'/content/Immatrikulationsbescheinigung_DE.pdf')\n",
        "filepath3=Path(r'/content/Immatrikulationsbescheinigung_EN.pdf')\n",
        "filepath4=Path(r'/content/Immatrikulationsnachweis.pdf')\n",
        "\n",
        "\n",
        "file1=PdfFileReader(str(filepath1))\n",
        "file2=PdfFileReader(str(filepath2))\n",
        "file3=PdfFileReader(str(filepath3))\n",
        "file4=PdfFileReader(str(filepath4))\n",
        "\n",
        "pdf_writer=PdfFileWriter()\n",
        "pdf_merger=PdfFileMerger()\n",
        "\n",
        "file=[file1,file2,file3,file4]\n",
        "\n",
        "for i in file:\n",
        "  for page in i.pages:\n",
        "   pdf_writer.addPage(page)\n",
        "\n",
        "pdf_writer.encrypt(user_pwd=\"enterpassword\")\n",
        "with open(\"encryptedfile.pdf\",mode=\"wb\") as outputfile:\n",
        "  pdf_writer.write(outputfile)"
      ],
      "execution_count": 193,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "abi9EfrFUHOv"
      },
      "source": [
        "# lerning to decrpyt a file\n",
        "\n",
        "\n",
        "import PyPDF2 \n",
        "from PyPDF2 import PdfFileMerger,PdfFileReader,PdfFileWriter\n",
        "filepath1=Path(r'/content/encryptedfile.pdf')\n",
        "\n",
        "fileread=PdfFileReader(str(filepath1))\n",
        "\n",
        "fileread.decrypt(password=\"enterpassword\")\n",
        "pdf_writer=PdfFileWriter()\n",
        "for page in fileread.pages:\n",
        "  pdf_writer.addPage(page)\n",
        "\n",
        "with open(\"withputpassword.pdf\",\"wb\") as outputfile:\n",
        "  pdf_writer.write(outputfile)"
      ],
      "execution_count": 199,
      "outputs": []
    }
  ]
}